---
- name: populate service facts
  service_facts:

- name: install k0s service for master node
  become: yes
  become_method: sudo
  when: 'ansible_facts.services["k0scontroller.service"] is not defined'
  block:
    - name: pipe the default setup to
      shell: k0s default-config > "{{ ansible_env.HOME }}/k0s.yaml"

    - name: install k0s controller as a service
      shell: k0s install controller

    - name: enable the service
      systemd:
        name: k0scontroller
        enabled: True

    # https://github.com/k0sproject/k0s/blob/8f351b3887bf80480c041121d5d1353f94dda4df/docs/troubleshooting.md#k0s-server-fails-on-arm-boxes
    - name: make sure we include the ENV VAR for etcd
      lineinfile:
        dest: /etc/systemd/system/k0scontroller.service
        insertbefore: '^ExecStart=.*'
        regexp: '^Environment="ETCD_UNSUPPORTED_ARCH=arm64"'
        line: 'Environment="ETCD_UNSUPPORTED_ARCH=arm64"'
        state: present
      when: arch == "arm64"

    - name: force systemd to reread configs (2.4 and above)
      systemd:
        daemon_reload: yes

    - name: start k0s
      systemd:
        state: started
        name: k0scontroller

- name: create .kube the directory
  file:
    state: directory
    path: "{{ ansible_env.HOME }}/.kube"

- name: copy kubeconfig to user home directory
  become: yes
  become_method: sudo
  shell: "k0s kubeconfig create --groups 'system:masters' k0s > {{ ansible_env.HOME }}/.kube/config"

- name: change file ownership, group and permissions
  become: yes
  become_method: sudo
  file:
    path: "{{ ansible_env.HOME }}/.kube/config"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: '0644'

- name: copy kubeconfig locally
  fetch:
    src: "{{ ansible_env.HOME }}/.kube/config"
    dest: /tmp/k0sconfig
    flat: yes

- name: generate tokens
  include_tasks: workers_tokens.yml
  with_items: "{{ groups['workers'] }}"
  loop_control:
    loop_var: node
