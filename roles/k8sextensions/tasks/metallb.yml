---
#######################################################################
# MetalLB setup instructions
#   https://metallb.universe.tf/installation/#installation-by-manifest
#######################################################################

- name: (metallb) set the facts
  set_fact:
    metallb_ext_dir: "{{ extensions_dir }}/metallb"

- name: (metallb) ensure the extensions directory exists
  file:
    path: "{{ metallb_ext_dir }}"
    state: directory

- name: (metallb) get the metallb manifests 'namespace.yaml'
  get_url:
    url: https://raw.githubusercontent.com/metallb/metallb/{{ metallb_version }}/manifests/namespace.yaml
    dest: "{{ metallb_ext_dir }}/namespace.yaml"
    mode: '0664'

- name: (metallb) get the metallb manifests 'metallb.yaml'
  get_url:
    url: https://raw.githubusercontent.com/metallb/metallb/{{ metallb_version }}/manifests/metallb.yaml
    dest: "{{ metallb_ext_dir }}/metallb.yaml"
    mode: '0664'

- name: (metallb) deploy the metallb manifests 'namespace.yaml'
  k8s:
    state: present
    src: "{{ metallb_ext_dir }}/namespace.yaml"
    validate:
      fail_on_error: yes

- name: (metallb) check that the metallb secret exists
  shell: kubectl get secrets -n metallb-system --no-headers
  register: existing_secret

- name: (metallb) generate metallb secret
  shell: openssl rand -base64 128
  register: secret
  when: "'memberlist' not in existing_secret.stdout"

- name: (metallb) install the metallb secret (only on 1st installation)
  when: "'memberlist' not in existing_secret.stdout"
  k8s:
    state: present
    validate:
      fail_on_error: yes
    definition:
      apiVersion: v1
      kind: Secret
      data:
        secretkey: "{{ secret.stdout }}"
      metadata:
        name: memberlist
        namespace: metallb-system
      type: Opaque

- name: (metallb) include the secret variables
  include_vars: .secret

- name: (metallb) install the metallb configmap for Layer2 IPs
  k8s:
    state: present
    validate:
      fail_on_error: yes
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        namespace: metallb-system
        name: config
      data:
        config: |
          address-pools:
          - name: default
            protocol: layer2
            addresses:
            - {{ loadbalancer_ip_range }}

- name: (metallb) deploy the metallb manifests 'metallb.yaml'
  k8s:
    state: present
    src: "{{ metallb_ext_dir }}/metallb.yaml"
    validate:
      fail_on_error: yes
