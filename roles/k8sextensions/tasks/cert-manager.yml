---
# ----
# A great guide which helped me set everything up
#   https://opensource.com/article/20/3/ssl-letsencrypt-k3s
# ----
- name: "[cert management] ensure the extensions directory exists"
  file:
    path: "{{ extensions_dir }}/cert-manager"
    state: directory

- name: "[cert management] remove previous versions of the cert-manager manifest"
  file:
    path: "{{ extensions_dir }}/cert-manager/cert-manager.yaml"
    state: absent

- name: "[cert management] download cert-manager yaml for version '{{ cert_manager_version }}'"
  get_url:
    url: "https://github.com/jetstack/cert-manager/releases/download/{{ cert_manager_version }}/cert-manager.yaml"
    dest: "{{ extensions_dir }}/cert-manager/cert-manager.yaml"
    mode: '0755'

- name: "[cert management] update the yaml to use the arm images of cert-manager"
  replace:
    path: "{{ extensions_dir }}/cert-manager/cert-manager.yaml"
    regexp: '^(\s+)(image:.*):(v.*)$'
    replace: '\1\2-arm:\3'

- name: "[cert management] deploy cert-manager"
  k8s:
    state: present
    src: "{{ extensions_dir }}/cert-manager/cert-manager.yaml"
    validate:
      fail_on_error: yes

- name: "[cert management] create letsencrypt staging certificate issuer"
  k8s:
    state: present
    validate:
      fail_on_error: yes
    definition:
      apiVersion: cert-manager.io/v1alpha2
      kind: ClusterIssuer
      metadata:
        name: "letsencrypt-staging"
      spec:
        acme:
          # The ACME server URL
          server: "https://acme-staging-v02.api.letsencrypt.org/directory"
          # Email address used for ACME registration
          email: "{{ email }}"
          # Name of a secret used to store the ACME account private key
          privateKeySecretRef:
            name: "letsencrypt-staging"
          # Enable the HTTP-01 challenge provider
          solvers:
            - http01:
                ingress:
                  class: traefik

- name: "[cert management] create letsencrypt production certificate issuer"
  k8s:
    state: present
    validate:
      fail_on_error: yes
    definition:
      apiVersion: cert-manager.io/v1alpha2
      kind: ClusterIssuer
      metadata:
        name: "letsencrypt-prod"
      spec:
        acme:
          # The ACME server URL
          server: "https://acme-v02.api.letsencrypt.org/directory"
          # Email address used for ACME registration
          email: "{{ email }}"
          # Name of a secret used to store the ACME account private key
          privateKeySecretRef:
            name: "letsencrypt-prod"
          # Enable the HTTP-01 challenge provider
          solvers:
            - http01:
                ingress:
                  class: traefik
