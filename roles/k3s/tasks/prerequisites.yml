---
- name: check whether k3s has been installed before
  stat:
    path: /usr/local/bin/k3s

- name: download k3s version '{{ k3s_version }}'
  become: yes
  become_method: sudo
  get_url:
    url: https://github.com/rancher/k3s/releases/download/{{ k3s_version }}/k3s-armhf
    dest: /usr/local/bin/k3s
    mode: '0755'

- name: download k3s install script
  get_url:
    url: https://get.k3s.io
    dest: /tmp/install-k3s.sh
    mode: '0755'

- name: copy the convenience scripts to /usr/local/bin
  become: yes
  become_method: sudo
  copy:
    src: "{{ item }}"
    dest: /usr/local/bin/
    owner: "root"
    mode: 0755
  with_fileglob:
    - files/*

- name: "kubectl: check if it is already installed"
  stat:
    path: /usr/local/bin/kubectl
  register: stat_result

- name: "kubectl: install"
  when: not stat_result.stat.exists
  block:
    - name: "kubectl: get the latest stable version"
      uri:
        url: https://dl.k8s.io/release/stable.txt
        return_content: yes
      register: kubectl_version

    - name: "kubectl: download the file"
      get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_version.content }}/bin/linux/{{ arch }}/kubectl"
        dest: /usr/local/bin/kubectl
        mode: '0755'

- pip:
    name:
      - openshift
      - kubernetes
      - kubernetes-validate

- name: install "helm" with option --classic
  community.general.snap:
    name: helm
    classic: yes

- name: "crictl: check if it is already installed"
  stat:
    path: /usr/local/bin/crictl
  register: crictl_stat_result

- name: "crictl: install"
  when: not crictl_stat_result.stat.exists
  block:
    - name: "crictl: download crictl version '{{ crictl_version }}'"
      get_url:
        url: https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/crictl-{{ crictl_version }}-linux-{{ arch }}.tar.gz
        dest: /tmp/crictl-{{ crictl_version }}-linux-{{ arch }}.tar.gz
        mode: '0755'

    - name: "crictl: Extract the tarball"
      unarchive:
        src: /tmp/crictl-{{ crictl_version }}-linux-{{ arch }}.tar.gz
        dest: /usr/local/bin
        remote_src: yes

    - name: "crictl: delete tarball"
      file:
        state: absent
        path: /tmp/crictl-{{ crictl_version }}-linux-{{ arch }}.tar.gz
